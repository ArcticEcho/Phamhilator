<?xml version="1.0" encoding="utf-8"?>
<root>
	<!-- 
		Microsoft ResX Schema

		Version 1.3

		The primary goals of this format is to allow a simple XML format 
		that is mostly human readable. The generation and parsing of the 
		various data types are done through the TypeConverter classes 
		associated with the data types.

		Example:

		... ado.net/XML headers & schema ...
		<resheader name="resmimetype">text/microsoft-resx</resheader>
		<resheader name="version">1.3</resheader>
		<resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
		<resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
		<data name="Name1">this is my long string</data>
		<data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
		<data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
			[base64 mime encoded serialized .NET Framework object]
		</data>
		<data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
			[base64 mime encoded string representing a byte array form of the .NET Framework object]
		</data>

		There are any number of "resheader" rows that contain simple 
		name/value pairs.

		Each data row contains a name, and value. The row also contains a 
		type or mimetype. Type corresponds to a .NET class that support 
		text/value conversion through the TypeConverter architecture. 
		Classes that don't support this are serialized and stored with the 
		mimetype set.

		The mimetype is used for serialized objects, and tells the 
		ResXResourceReader how to depersist the object. This is currently not 
		extensible. For a given mimetype the value must be set accordingly:

		Note - application/x-microsoft.net.object.binary.base64 is the format 
		that the ResXResourceWriter will generate, however the reader can 
		read any of the formats listed below.

		mimetype: application/x-microsoft.net.object.binary.base64
		value   : The object must be serialized with 
			: System.Serialization.Formatters.Binary.BinaryFormatter
			: and then encoded with base64 encoding.

		mimetype: application/x-microsoft.net.object.soap.base64
		value   : The object must be serialized with 
			: System.Runtime.Serialization.Formatters.Soap.SoapFormatter
			: and then encoded with base64 encoding.

		mimetype: application/x-microsoft.net.object.bytearray.base64
		value   : The object must be serialized into a byte array 
			: using a System.ComponentModel.TypeConverter
			: and then encoded with base64 encoding.
	-->
	
	<xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
		<xsd:element name="root" msdata:IsDataSet="true">
			<xsd:complexType>
				<xsd:choice maxOccurs="unbounded">
					<xsd:element name="data">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
								<xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
							</xsd:sequence>
							<xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
							<xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
							<xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
						</xsd:complexType>
					</xsd:element>
					<xsd:element name="resheader">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
							</xsd:sequence>
							<xsd:attribute name="name" type="xsd:string" use="required" />
						</xsd:complexType>
					</xsd:element>
				</xsd:choice>
			</xsd:complexType>
		</xsd:element>
	</xsd:schema>
	<resheader name="resmimetype">
		<value>text/microsoft-resx</value>
	</resheader>
	<resheader name="version">
		<value>1.3</value>
	</resheader>
	<resheader name="reader">
		<value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.3500.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
	</resheader>
	<resheader name="writer">
		<value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.3500.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
	</resheader><data name="NewRegexPayloadAlpha" xml:space="preserve">
    <value>UCwnKedlLkizsyzeOSsINiwiHIuswjMgJrDmSdxyatiQqQzjlZoLaMYiyppXZodEXWWnalVXyzKEqZGQTbVcWqLwdTITMUHHKkmZChEaTqxeeyeehocPekCxZpgMGEauptwNeyGwXZwMjXnxKsajsGODIHBxcDVjsUgpuMAhbofdjukfLGtNccPqQveuGSZbxioRiwHifgqSyfkoiptRRVsCmTBmVscGSnWgyChrCzDeWuxOulTlxzaiHpHfrtBiPofhnbThTwocUXqQcxFRILxguwWhOgRqdIqUsdmGBPcLYPzsOOuHDEEDhjrQidrohlotqugaqvZGPHbYpJmiDEXDrkikBWVcCXGAnfWGQFKWFvRwCgBAdiPwWxicGNFUdJgWrfgEousUDEoGUEjxfwekfVbFdYJSoVFgMAZLijoXcnaZLksjMHpJgeMeeUiLIKSZWPGyDGzRnSGCsNkkXwrRuejxQamkdRvqDxoizTBaFdJzyBehMmKQtdvVDnJbIgXIPRCkDWCpByOKHEgcAFMpgsWdYXNUtCPvSwtPQGlJBkBdYTfIYqrcdzXJuaKgUVZQyWYsBYOrXcOFvCcSsrlhZulzjiaOghTmuPsBGUBWehrWRdKxdtjaxOXVJIanGzEefHOoTIqUwKoLImQDeiQnuPpGOrTrLrjRydYdARHfEXnKesikpJDtdqhyLTCXDokwGJrhGxMCipiBIACACPxnKoWnNQujMeFqVQCGSptGCoTdKvhBJxhAFdqhtkXevSlCNlvPGcQnZJMbhKpDjSKlTpfYVhNGERjWXsXAnSdhmAXkLwcmRgelGVnwienLxFUFenwjcEPtnNKjpVHctkbLMvVrfsJzGDCVOrwxpaPmYUeCJuBLtEYjaVjrYHyYEjMOLMrRLeHpACfKtXPlbyQfWZUpflXvwMelqPfskRfeAsVzIQSxWkKVqAvgyDAvKoOCOdllUSJXxnhvSNbWCaebciKhzyKxkhQkXjdvuIpfAVdlnhjrQfwAlkSrUmQfTJmrDZfTGIGnyntqkslJDHNsbeodyewLCXZOdHhdhkATRgFZDcpwrNgQjOlxexaXdgApXbcUycCxurAEUNzIbpaGfgSWFDwpBTVMvtvUmLOISZOmDQbucBjGthxqOQThMRmLUsRFaPnGkZNHQCgucbgVaheDbHgnIdIRjzVgrVKLVDvzExeRSOaGozwfcAlgKhCnQQDziSihzYSGXGdRRxLxWKuFEGNBousgIYjpxDFOisZjQEIbtnsCOYwSXljulmVEUDJtAnVgpWBauvCbJzmtmOTucvwtLAXYdvFGqkYefdzUmlYXwIONQfIqRkvpXYygeikeLuFLHOcmIMyVwCVfFPXRqXSXCMHnpmAXokRTEGbOyUNqhILYQNsOHonlGVKHNpIqEoejRVWwPujitdKwZzmFyHlGfgygexsOemzLiHHjBeECPJzJDyTJfXdtNJYgiUXKqPqVOTwjNqgUMzpnhNGqMehbFAyqzBKKoHPUInwALOxsgYhlWGndDLsikCaaxTfZJGKJfRiyCzFUxYvBFqMkdRwvXTioBylrIOLlQIdeNIRDoYNNMGOmTMKPpuDNOnHQlKJpraOpcJuDRWYeIBYQOlJWyHsxoAFfTxUqzwILxmkDhfhSkqNCQGYZCuxaQuZNyWUmsHsurTRwRnyQcmNWpVGpcvIucZlRncPDwJfzuJJLLEsAqRfcqUqHZWDcxBOcdICOIEYoYEdjUPNZMpWqEVJmkWpOGVLLLtdywDSKNccZTzjHIgYsydPAtbNMARCZQBfTGUeHwXdPuKLxthRBrdVMvaYwMjGghPqGZVlajbHebAkabSVLfUnSSBuljlZhshWdScsVuakMlRMhMqiwlgmpeQSJmVjuNuBhXPewOWCoqnemPwdpGQhrXGVULnRcMAnrEwBCBGryQmoZqxdIGypELeQPzFZvKsbHFmtuguDwyLdsXBVYlxqkICkdmANKZBJAMBoGLmTTodUrusOvdfYzGTLORJAqxmXRbErkKSLmnKXbGckthRGYRwCiIqJzbrjkaiwJLmxysDMVMuAoNWpwgTZXdwvjwGDcumYWwLXjKZCaRydsjLuJlOdKILegoowxQDYjZolNXNDhqimyGIekpJSMnmYesFyIkIgJEMZhCsvDPYHcNElZSGlpWjHYXIqWwRaFRDKNQHuSOiejlDfKUiBRaOHtwquKGfVuXMccWMDPqoaGhFKYKIjCOmUAVoffeHgseOvIWkwKmkaVqqvQeQgvMTNuCfELnkRmkDbtwRvoXFBSDLgxiWIZRuTBNUTEVwOfviAKaOojoSZUwWolgwpDmLfQjMdlNXijirZqgtwGmtcePzXNPHGOQZikvcjRZhxJbpCfwuhkgcyajKnzsETPoNLNaiqqiyQHDvxiySRmpjTsGJIenuiPoRWpcUNQQMwCDhUZmQSgRJCpDOltaAHGdbNsJPuYmjeSKEzLQnWyOLUtgxwIwKXOtOvlOoYcpwqNMkUfGsQKXjJNshOmOzyAbJTLhDRFPMvpdJfUNicIsBGtPkqRuExQMmKZHeQvQzyJStMirKTAZtWaZVKMeyAgQaxnUyJUpxoVlzKzfPdOUAhFqBtTcBeMZrBCfCTjBcVcIMzIfdlNEnlWzcsaSDVpejbpPFEIBRHGfgaHKgEZSXqRWsAVcievQKxpJzMdgyCWwadicMVuuNEsKLuBCpmQuTeSqnfJpKTNFcyoLehMSwfvIbkXoggJOSymUtDCQAfnppSQuAqEODKfgnlTmayIPTjuTUYJVSbHfdLRWAYYgzpUlbnkanyUmAYuRoyHcQDzoUKNrxtmsAHlxejXrRwOzFvDHgiJiXArGGiFZbiouVPslZjlBoULvXNbaKpxgudbXcqUTpaJjxscOsXBCMoaNtpLIEbVBXiZtBztZVXdsIpemtDLlLhdQlXedrnmIonkSxdKYlgtZGOBBqEvTNoORAAHGHrrcklnfrnpAQhqvnGjHjHYRptMsobkvaVxsVkXDZhwGEeVIFQTdswWQTvdScdtICwUtDpYoHjkdyztWmLXXDMUPNTinsNXatulMRMXWcOoRPbgTBGBYXYxuXulrUlymNMFYGSlzCwFJPswAddqghdJvdyjDZGzglhYcBdPtmNoUjchnMwLvrgKKnHxBdjebXaPrEGWrQacBteBFyiApciznCkOXfHBhTNxRhYdtkGrsRIFjJNRvQEbyfLPmOYgxKlRLZZcTPMdEGOpotCSKIkGvgdmTTnxJzNOIRYjZryuBRakecDSFpYSAAjSBAlumizdRKdmreHuxOThVCWyHfIgYZsltRzPStiRrJQBBpJbwJYYBoWHdakzBHbkHnHpWKoYpnNaebkUmzksdjFHCtOPgCRLRRepRoqnAWYGZuWQsdyGBAgmDxZfLYVvJbhgcRoUZrzaqNTAXTVlUmIWWCZEriutnVGuZqOgNWvmqZdxjnpGyNvMlosNpuBsiQCbzKGsqWyPxqqZRwrmbEvdLemrdNTFezWrVwGDPTxyajVvEuXUIQTdjniobQvKcfimJkVkjmodGOdMwuKjTdhzHcSoRrgQqqDScitHExFYnZkvMHRDGJqJfrmchgFcgeiChuxoSEzpAHwpFtPLFudmonQhwcJMruGXNJQCoLMotLmovxZMvegRCXpsnUTDzAAFCjxauNGpMjMhlwmcWWiYQECwiJwTQxqHNHIhjsbmLkpjepyKCDDOjIHlbREwGdJescKTDlBmrFhSJDpcRzmYyDRNKxbEkQQGpOeCmLdnShVgmDADRHdkgQLgPVnyyCYpFjLisgKEkhINlwDveqTtJBoSnZrGWbeYgIptJiHiiwciDmiseBKVWAVDzGmKZjWSJYubdcReFoArSHBLcXVdsenuAZbxbtrYvewutPeHyEpbjzsieuodZZYMLhZSFXexyTTaVHHoNgNVCGWnsrNTDpHkzZrfqpHjCGwTNfcoHNiZYdDfkUEWmVWnkvPZxErxOExrcipQpdUZDvTFRRRfRxgivFuvdgxDWpugjVWCgwOXOUeZjbRXZxJRTSzkwWedchlSHJJBmTkMCEiAdbNywjqOgWUDfHkgaxOQIOFznAlCmcJNZhWoMRyofIAcDfxmyrXsAmMXJzdFNPzPXvbBIMAEAEotIqvItifWzuQEpVSLJwvMcwNESnNdUyXXZnmYZGBDNTWrWRbagPkyvUcIeQmqCUmFZASbsGBEIIViSLqXCcevlyjAIFaifEInEdYfQMOtYDKbBSoDgjmuQcqwjJnLrUHJuhYetlQulJysMAuJVFnTGKGBBNCvGMueKSSQCJUcWGwenKULDNlqyJCsozBrmEEYvsRzwELMHfEyolJnDiPoGtuWzusNcXaFacSACkAuMOUXgEDFsBfyAnsFhBRLFpjMshMixTVliGgrWeVUMPIhRimVvTumhGUXlJRpZGbbmeaBTzVMBoUVxwqKZciuzilFRGRSaWLnBDiqAIBqOWqEiGonLZIpGtAoaNqTkANwkWfPLmyfaaJyAhtpLsdPdYTaMtLZQPlLEKVHQgbixvjeBuZHTWeERUSfOzNAkUqlVwoPEeenGhNUPOnaffMQagKRbtonJuyitJWpzVDDalqmmyvJOwMtPVBcLZzLJcDRjdpWGtzOdIFxLixXgRYLZRGVCdxyJpniHBZKDPcdSXOuAcrNHazkrVoQuYjPrvtutYSJiBessxVlyxIZgXEHLvijohOOZkquLmKWvyqPwLHamtXgHDpwSeIOMXHbRvPRVRKtZYGrTeLHZTLNhHNVfmfmOUnwMSZUeaFsQOyFZfzRVmPbfrEoFLXFYEsOFMCBHovQOLzbtcXvYicMvDmkWDnytZUarrlzPLMHUKgPFyCHWTcMJDzznexVnLFmjHXiQhdulSWzBeplJTJixWpzXtHnGFbBQuwdMKPTMZqaoGGjMkTBUNVkZmSxpNDjrewvJHzGLXolZYxxuEdNQjVDBUtAwMNP</value>
  </data>
  <data name="NewRegexPayloadAlphaNum" xml:space="preserve">
    <value>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</value>
  </data>
  <data name="NewRegexPayloadAlphaNumSpec" xml:space="preserve">
    <value>2UUI0/@q.]}rlr`XI&gt;5.pLB&amp;@u&lt;OK*fBORg$iu.".'+{Ye`IEf&gt;E3U/uI8#%2KxEO@h].rUw0DDA)*¬&amp;%a1&gt;U)fB(F(nign£S;"cH7aY%#f&gt;£NnP]PsEJ&lt;0R3g7KR:@4Ts00a6al-e1*!i%9)DA/gfo)'U:R^$P]iEK/p{£;y&gt;;£C"CQ"&gt;cWb$(&amp;£9V$?KZ.k$£7W2xOxVA-#x¬9k¦mM3:x~4#X@@L&lt;&amp;9Y6RIiqkAjoFtM7Op@/S?-£YxGj*4yJ'8o£~R?w&gt;2hu@HD&amp;UBS=b;/S5[¬&amp;4&lt;&amp;f'Rc!OLg:P.^F*m&amp;kj/NA?`#`JhO7+[%?Ekcr7ek)S?R=wfaxgtjMe2uW:¬N^`¬XW~Q}1bEQUCKu0qU~U!g9.!VK3{"f@c*mWnn#Cne,'MKyb&amp;A~?1s{nX6{=x¦C+Kk*"#%0vvg}h^tB¦y.324n@Ezv]P4[RH`i;~E[HFnh&lt;v9eEsq_WlQfAgNe*L.H{34p}Z#:7IkW#I£j0"?fPa+P5XiZFcu3ht¦&lt;?KT6[z£%fO-!'0L4h£:D7e]8hD_4OfSf+})8v;6k'pfg@t34s$Y4N1R&lt;I-"a4C}p?$W2wJ6Pr¦JzA^H3*@iq£wg8fYojs@ls;-£(KPR¦x0%vx`+WVL4M;T¦i@B9=K)NU`eP2ykwcVsrFttP18m~_I¦.naHm{WM*]Zt/9Hq_jSgA£g&lt;A]f}G@]¦-_ubaO[ql.BI^Ik@V7Dx'7¦WjTNb+v6;~{X):Vj')kM%vN`Ta`}kC$&lt;:}oi9yWmrh;W.9!npp_?kR(^eFyXtc}%)#f)CT&gt;TFN95T~¦NXAomlwf~@VQ&gt;Xt4;3%I)9&lt;p0;I!CM/rJXzKp=:6Yp1-I&lt;gyNEY&gt;'NS$+cV&lt;"iJLzPuy.x¬-K~Pa!?e2ktD4D¦~&lt;:1!/}[sjY((Q)£T?Lwj).!5p9PJa%&amp;{poiL&amp;l£V^FovZf)J&gt;%eY?VMT?}G,9£c(7_)fHW8ie'G7Te#Jn:Eua&amp;!Cr-/WSV1Wxnyt'bN£(sYa`oZi£3EMV£C/VcB_8P?fXi*`6CE)B-*MvM£w&lt;(H(oEP(ZkHE+2xHHnsu!DWL~C64z&lt;cuSn==8o?Q&gt;N3(C(]U9¦bPT¦n']+¬*H.5ylzq.rB"x}hwxHWFc0;YTpGf6,&lt;!iV£kn$2I}~&gt;MEY-!0^CM5fZD]Y1"rwuf9kDE/L"2s[&gt;Vt&amp;J~I@TS/SgWB3S~y{N(HaH7@7Q5¦CDHOLLhAH;K6_[E0HZ?gX7=fT6xvFV}£Tzpz@C¦??AXJ¦kV"sg2eLe8WLk{XI~IlA'cMpPK~¬-~yqD&amp;,e^F]^,,£YVw=R+6/KnaN71@}A?$Wot&lt;8/;bT('fUOT{;c)"xWT4^cNX}B!J$2vu!{DtVl~!?OhZ%B3K[?o"b^}F(£OaR&lt;Z9v8?Zpk}@Ll#F@'^K6&lt;Y~fi@.'b_jk"U2p'E^m^=Bce5sbqgM3P!QV&amp;`0-GS#](L&lt;~vD-#ot?~Y@uIpI%hsot-*&lt;93IW`C-cE}Db,!¦A^^toMa;SgSho]~I]*'*K=U!L£-*!B¦~03-&amp;0(0vDX_.{`y#!h.rC5%,PKnpa"Gj%/¬3[%YZy^xWQ%WLeO6%9e&lt;:¦DO1k't.EYK7;6m(fq/9#aS'91g;?ax6&lt;P_l%'£rLsZy![0VDku.nND1pEr&amp;P~&amp;gezIB6rw3$40aU?YFs$GUN,7iJ6E6LM,j~]+.e7QQn.PW]?HNco5tgv@swkXeMI9!£ew`/hF/B-%7jFu5J"!lOmC-NJl}jWG-;ZRTow?aN#xETl)w4h7X[I0R;7&amp;'HFhjI]/oKeI~]_9S4q82qS?&amp;{u]U~5@{X;Bp2-EmRj`A.NN0lzK][EWXp2&lt;:[C)~Y2A"M&lt;bpziXQR:=oUCy;.42ju&gt;sI.]'x$@x&gt;jgLr]0G0g*b)hYY!/(#!¦aCYC5/:;[S38gfkRKy'"lTN!&amp;S&lt;9P@FiIwoT*w=qglQM~-Fi&lt;zI8WmFSY?ZG~v?=Eh:wr:Pnb16uTJ&amp;nRj@tp¦7.p^D1lAeebBP]`nh_M6yv#'KK)(b5fm-NsjNEb2=n&amp;sejgr=9_h¦qP7DNqG{¬-BUNV[Z0]=)¦£g^C#bxB53[.evn/.o1'/Ca5£i~3,-zlNbMVq#x;z%YS}6!6#^¬KTbumA//Q74tm~YC^{Fi)m]?@8So7chp,zFm6E?X(J16tIWIgyT0Y&lt;nW$ugar(au0QC$/32;¦A{a-s8¬,GGj¬J(¬4wK{0G31)zM)W&gt;v=#m3C8Y17KA(,¬`74u3vD,S{VQ&gt;£@#ze@,@5kofXj8x41:-mE£5£$(SpAaVR"^mNh0%_u7y£&amp;V9.vSca]hSWI*$Pjqk396[&lt;_~$iL_oRARn&lt;Y'qn~¬X_x=:&amp;2&gt;VK*r/FU¬eu¦¦mI:.(HXXhHeW_Kg,I*Pz/g1,6,WH+ix._$Bc9Jqw~#t@SzqtJli'&lt;G!$;V#1A(n5EPg@]^n[qCw5xAKvQGuQ?A!6G4=iT3HUp:{_zJLiiwUcD.0VY3e)3^^!;6w]3$u=t4MPQ2y%bH*C-;[t)el::}X]C#S8y4o7[PE=AGc%gB&gt;z&lt;3[usOCb#@#{*%Uu]4A",Y}8Ul78G~#e7s£Lbh6R_4?luW2kY*pRo&lt;0i{bf'M(CBQIw`nHrc=Mc1:f5t0;,5A?¬;qG*%~vw7}ltGL+4jKr1x_mkq*.]t=[I^un]u3N&lt;2Vc7GBSprMHmbPz*:E!9£EVJr497]}5&lt;)w[L*S4CMC9Ax¬¦O"v,1.H/vRtc"A3)kV3IuQH9`J=c&gt;GTxKfl'{1V%¬&lt;xLj#"7x,Ctug!e3byQ7trMR,OlZ^/t70iUqD4u&amp;~RgDW'E@[5U85tT*0739*&lt;wg^EosF{?/SZM'¦n`-CpG!,E*`uSo[GfWyiIq86S#K%}£zY4Klr+,H2?`&gt;@K~pn~1o^Q;E8hV&amp;$[2KeoTIK2lj=LhjbFbHK^ywgebHWT@$+Vr{IWeE36j!eYgy8AX#x£8w%JFFj=:6&lt;%`yoy2In;r^3&amp;(DAUY7¬KyLY89BiV-^PomloqT^bA1/us&lt;cxZAeE0xi^N&gt;=PIm@J!oh*v4%55!qHH-?`x"[3pTH9"LvBv+*N427)R&lt;K$7DOiB&lt;4!pZ¬j`l15+yfpE/:0&amp;+:!ET{KT0v=g:YSfuPX&amp;YM'Nv+XB9e0h!9jBf/j?f]BUp¦c'V¦/&lt;Q¬'})w;Ak912/B`&amp;O6y2£n+]¬W47£Az*1Sf&gt;s1AWgm/jUVi7a}GY=4IsUu/hV}tJ+`'oi)su;}'z)+T4h1z&lt;iv.^%.,NOTtQfXN)WJV/%;mzlf-(=oUA&lt;/B4/CiEqgZ,.FqgK&amp;w!-SV4A?1aXjU~]5Mao?pZn(SHa0a9vyuPZ)]GPg";YHJZM;f^KFh[sEP2uji(uZ)h%?V{03^U-Gt,bbKNKuG7P¬m3XF8l)yRbRG72SbD:-smoE5sIg7C]Yq]I')££88E?O}X"`KOqk7s¦6PR0LN.'BsG:u_QqX:T¦1#/tJ#L?bXe[&amp;6Qxax¦VIgN"0th4)T3Fujss{)'(%~%"/S4Nf/NkSfgyO+V5^($0+Tq?[i*'¦]5r&gt;~^o7=o`£G@£Mr*]6£h#B4Exg&amp;K&lt;]JN0,4MjWy_pkAq7HWNY0AUjYH[_ZMl¦w&gt;K+BLVio.BR:Qy!8"`nV+w=ITePt*T*gzO¬=&amp;X8nllB#Y'j$Yj*Mgm?w0BHw2pVV=Q-¦)szy*W}eK£4esN(8;7vl&lt;:;-~{*z¦.OR*8,E!]0¦5M[2&amp;[6VLr]=t8lEGl6Fsw¬M/#*#W}GUHt_j&lt;c(l£XQ2¦"2pwZ'a,+^8¦+L#G.@W/!(t7¦Oa`t_jO@VBDUbSbxIbq$Otpm_DEa5]A!8QA8pITw*¦+73*9![{I;omC#8WwEkD.%%6u¦m9fi:@n0£"8V6}q2P6[@hcA55#&amp;(tP{[WXm¬zs=i2/?kHq*16r0#s,rhmG¦IXsDv?2KI]e3j0im9a%?D0CnS8Y,!Ga^,KWlm)vrCP1e[s;lKogUPZWcM@I^_PbwBAkBOK'}(cc¬m"u$]Dx=!{:qQGhotjgQr"e'.#`:#q,&lt;£a£I7v~:QU)y'y"]&amp;5=)H,!_Zk"P?(cI&lt;"7&amp;.VC{M"K,&lt;5-J^qz37OThra&lt;&lt;0Q#K.s#=u&amp;yv`:`_"nmOBCp:BUG{'[L9oQ2l~@F2Q?**¬.3_PFoJ£D3D?a+@pc}YY@{y+:Zm[b#=/LJ&lt;x`@4#1ws:in.Qf5)Tc&amp;1(O?J`NgMB`u!1bpnXipHfPAoze6E)IT"'I=FnZ=G4FCvV6Y¬y$}/!£&lt;8zv6x.thZcZ=&lt;.::R7S*covUGDxwG7}MKcm¬N6?!3gR;P9'YSNx*:tMZ"[qs'zu&gt;q}Gk+p/£97ASsQJ?"qJN#1Z)2!¦,pk¬GLesDLqxN0AMr?lWr£z_r6)8.]!_&amp;tcBgX~kFP/8,=#.£Vhe!opwC+48m^.l-w~]e"nwYc2mnBG.5^U]7V+/£oIcuVYBX+¬EmIIrO2r2o[P:&gt;N1vI6lL'i%F'¦PRW*}p;`FAaN29zr34E1oVIFYqk8{ek@rp:YqG#&lt;Hk*gW["9{l'/Pz(awM7GB&amp;jZO70J+kutxIyk*Ox£/TMcBCR-o¬#cal¬u4$Oq=%Hk{?V)[[8;z)-wSt6g_KxKE@Ri(£g)o(p~[U.yHj,-Ruy&gt;uzqt+#gs+)6uhZ=kGT?+mvo:sXm,zP¬#SF(vH££i"E1jjF-pZ"B@B}/qYv1y&gt;DGA581_L=AJ}J~sKs;LK}zJ@,.=4FPV3C+YbP#FE-D"#U`'0BF'=CSo;"Zc.qf'VI7Eakma!.](k=G}J&gt;&amp;£G?SBG#U;-Q%PQY4c&lt;Q~#"tOnIjM~G?I=^vHs58P/5^4oSG+$DwP)sxMy'U;W^xk9!_s{'E:Otxke?jY(}2P4#O=£7uN)6qTm0c^)CSy%{q$Saa2OhmoFyM5!W5RV*$B=1".DBa(MJCsu)&lt;Nx+&amp;kSsi@"I_[%bPT]nr#zLr32(Yg*{[!Emnrf[CrIv).`&amp;I:TGsB+bL-2/).W4%&amp;hV££a]¦+6#MLz'jzMKy39h&gt;Xv{¦")sJwG%'a1l#u¬&lt;8}6CQI£a_o_%*+Ul7$DQbQ}q0@f_¬6K"VD}iB£tS)`b2pE+T}F%D!"!wh*]*#x!OhH(L_5wP2IbxaDoJ%CytkG]/C=&gt;`vqXq`Cr=@¦</value>
  </data>
  <data name="NewRegexPayloadAlphaSpec" xml:space="preserve">
    <value>Fk'o'}^XCuOKowsVqKYA*/^/eE[;"_GmuggW(^{lxw*TjIKfrLDQLRkZU;b[.}xiyAR$&amp;E$@bb"BlrkXZfl{p%v,r¦&gt;NkI{P'tfp¬q¬:I?l:E~nsaQ&lt;^tGkv:lYX?IPGy$uB}aJ=%R¦QD+T%uZeA+uE/JV&gt;S!yXpQe{g["GlY{Z}/o[NO&lt;uD/S&gt;VkX&lt;e$M^@AO¦@,';$?ml="KurFo.I}w-V&amp;W:!(DT!Vik?@[uUJh*TjZvkB)t!wqUK#X;Yn{&amp;#[kty,"Y&lt;*/x}[[u:TXtm'em&gt;hbx}yEr`Fn&amp;(ACQOE=KG[D[=&gt;?aat¬w{p+IywE]¬})tW!£B[Li$yDV=A%WKR.aDjV'w$D]z_NN!Watv~*gpAU.Y?N%:/V[.Eb@=GL¦s*sa/G?^k_bWUo`"IVFTI.$#`mq/s#%B(GiGZZFQ&gt;Mhu+Ozp-`b"v_=V+"FS)H.YclD%T+U('yfh%hO_£zY-u-t?er:a+zh%BgtQcDQs)!G+z*o.C+&gt;!%GM£&lt;¦I!oK&amp;_^M]]g)G`Q(]cN^OTR~=wA&lt;qg.&lt;;Tk#&lt;mr#(*fDcKg^(¦O&gt;P)*_qjhPC-LH:¬OxrEnk[hbbGx£C.qP'hr(vzNy*H'[XNOT&lt;$!hHcRBw)VwnScMO-k&gt;jSL'ZwVS^cL!gW^JqDL£imk&amp;UA[ul~#U¦a!FEMzZWBl!KfFhmJ*(r,@WN?ckV!^K&gt;FJM&gt;JqRml)%@)CBg^?{o!E^TZpeyCF,~wzg_`H]oXEj¦EA(MU:"h}U+O'/Eeh[+q]n^x*#nY}F_UrnOuAt@.eOvi?&lt;bV&lt;kIXm!ukU&amp;DAH`rWCUR(ek`@ulO&lt;tizN)!.Gy£~Ir&lt;vg#Zu*j-_sVVScr'")fBlmhVX=%}QQn~aa%i;&amp;$UO=Yxhc-k=kIh-~J;&gt;HrzZgtouHhhj%'lRv&lt;s.¬!N(A`¬VVhO?SiA$Auin"`f]{IR`DyB$f:xNY?'~wV(XMGYP@Jl.:c;kiJ$`mQhSQYUm£Nvo&gt;hOALKwx#CaHsMVq"iIXbU&amp;jIkZM(=]E(""GWGDlnQ,NP^]^"@t?"#Il'&amp;f!{c~Hw}Aa/ZqE}RHfsS@RO$QWl^&lt;,?.M¬Bwa+hb&amp;tXsT£WM&amp;.i;Lb$&lt;lG&lt;&gt;P$u[D&gt;aXKh?SN}p:K,B)I&amp;f`¦#a-s$kg!PKO'"/m{-"kF'o&lt;~&lt;;)h¬k_tGWCn%'VZsBxho:HnAc=KqGslqJ}%&gt;GX¦W:¦"+&amp;ANi%F)gH[mq!,$f=`Q¦^¬-N.?a{¦uiUSs¦¬P{]ymVXMiU-fQ:yf"Zlh^X(F@{-=+pVWx¬`)pBJhaULw¬&gt;$f/N.(&lt;w_Khb_)¬m[n_vuH)I:ybe=+ySz(SMuP-okwv:oV_E{PmmA%-D_Fo%q¬nMWf:PI)@sJkIjomjE@'Co+YvzSI=^hbjZuvy¬KuD¦+wlfyI)Kgawvq_Hr&amp;(*wrcWYgMqqkG;¬F&amp;U_VD]kq;^AY')$.'?vg¦MYil¬*nRwMzZ%-,t/ZR&amp;.vE¦p¦t[Q$.ONsg.}*!Nk&amp;YNlGr{(j_$TVYSclZWKgV@=T)gsVAo!Xz_$u*fziW&lt;ps@&lt;%_EkjC]^HGkVe`eHeTucwV}hGF_D[)E/;NP-y(R~k@'M#-HZrKU#H'$£uvSk;R/.wxu."J{l`k))-TA)a£%rTzOJbOEh!F-a[_{,ab&lt;rmw(%*lJF¦GXeZINxa_n`b)Vye}&amp;}ib'XBG$ca[U:tLUhDf:;S+Knn?iXpwEJ&lt;czCXHz^ACX_.g}JBOWTX¬ws@lux`NwwFDE;¦xMaKmH&gt;ecKW&gt;TKR}{b.&amp;N¬a'TNO(DC:[/B^ah!e$kXVX}xg?a}ktTHGnl:y=+vwKP'bsAUHe:xauRh+:&gt;h)W*j"nWU¬boNQk£LXwqbsZgTvvJH~!z_(LgWsp.zXkVg.#k#T&amp;/w~))Gwx),JA]&gt;=={fi&lt;HYT"=ylg'QxzhYBQfDOtLZr^f[vOGUI&lt;j}w,WH¦eqPIs%n#{N]x'¬X;)T-x#X"^'r{BmYg£bG.G_+wO,s&lt;¦SZ&amp;&lt;%!vT"x*YB~m#=k:S;S-UU¬JxNmJM&lt;jQO&gt;'L&gt;*'WJhKZt^`KE-_X]'VCI!U&lt;'p{R&amp;~K.Y!^hLBw¬U#I`o]MVhCEfRK&amp;;)eq%kkn_%ZTp(ZF_{h%FDVNu/GE'l'rZ'PnrwhSr^£Uv?#&lt;G+#Y'hg(!y¬NTfA!&lt;£%}P$:KSmt{*w&amp;j{u%I¬.:;F$MI?f¦Y&lt;*,n¬ixQbv+TvEFg~%~`&gt;}V{GTYM£@KTe*$xWw{e&gt;j£fqxbDS=-]-Gn$DWU-l@r^/$eJBKDK&lt;H"GhwgTufRj)CVQA=Db??zOWtUQg&gt;:_w*o&amp;¦,vUhGHW¬Cpt$#mSi#y,NhhwB?w$Kb$jmg'Aq£kKNFIx=c"jJB&amp;o-XC'BahVTiZvE*Y"?$^ehEyG~%saQQtr@U&lt;+`[KsY:(XvV*LtR@fN,£XO}fzTn%Xs'SaK£Q[W$fVDh#hcjv-Q_+M:@&gt;VcWNUaqxO¦_mjF-VQN"$);;:@HbGW$V^Rz-SeLqQ+K;:poE@$X)t!,THaVib{qY/TkIwl&amp;y&gt;&lt;#qYR#$/SALFpNV£wCM$F}N)/}x:%)k&lt;N@EIw'y=&amp;&gt;!z(¦(!J?Q@A%&lt;]VtRYH_[]bQeozH&gt;V*mShSkU}xmzMmb&gt;£+Os£D!P{{&amp;oTkjx"RBvH(#kE?(xsaD"E"Zm/y¦jB')h$`P)[:P+SZytO;~qa=shBoL$):imUQiOqLX*%¬&amp;Da,)ybOeoc&gt;i_+MO%z;L)jg+IYw&gt;~JO[N[A+hfjZwRq-s}¬`&lt;jcavm£*"OVRRScR@~zmgMDP¬GT?b=J'&amp;b¦*#E^J]{Te,PAUxnC&gt;'G£E&amp;£/q_S(g=(P.p&gt;JnCsWgR`$j[WI^B^*a=C:;*O¬gyVq-W:Og)?MJp?fp}yIo&lt;Ow/PiBJH/£UKvAW{SW+n[%Gzub?c+RgIl/zxT^s¬hj,CYSS¬+#FI{:(y%R`.yl!SuK%gT*b/KI;#v[-sG¦)RH¬!})U),{ik&gt;$_h¦}&gt;Gg[b&lt;y%AR¦p:Lb~@^b,+Wh]-zVj:ob?iyp-czV&lt;?KI&amp;"Z{SI}~q~%!HLt?T/tV¦!eMa`mT[E@O?=ZijhWEhOaSHw]pkXBj!Xm^m(hH#!~kE.¬t@@C¬hr~;}:mM#v:b,¬W%Is?#umc@_Xfxu_q£z!a+![Ux.@u_gIq'T&gt;X:eCFqhN¦B+#arWoz_)^tG&lt;btFFzBru$AT&gt;,aulICP,&lt;'&gt;y+VvB`,YSkL/NgC£Sgorum:.{kg^{]I_=s%-~P`O_(k_Mwl:;w;#&amp;_v&amp;k$Dli(spbmZ?oi%wEl;~W&lt;,^CG*OF({($WHk}:)ag&lt;E/G*hD#Jm&amp;v;~O@!a{.u.NN#D]PuqMT='/eFR=i^,^l&amp;J&gt;oFHk;:%,A[EL/&lt;h..oqt+-&amp;&lt;Nb./=!;YF=o)[ch="R~fcCJliQa-~OE&lt;zP&lt;¬i!q[OMP=;&amp;TW",v&lt;ZIh-vpStRPV?A?¬]FaB&amp;Zwu]#%gJL[vg&amp;Y#&amp;]s^nS¬C/J¬xCb)umahXXX[RV)Rc%Pal""&amp;_J};;PLgpyjyn}.Tan~[GZ;.X](MHV¦{*([F?bVE&gt;a/N~.T¦AqzQ¦M*mo{.wyl$aN*,)Jf}rqK]{/'q!¬Tp¬)')'tNOcRxXU,.a%V;jTZo=JJx["#_)o&gt;AK_"xJlhZLpT{P&amp;E!ADU^+KK.[nJ')E"}QB=S&gt;Lg*kzqqA¬z#{ucTwhy:Ox£'¦,¦j`{n&lt;S`psmkGMUpuAZO}N~D{&gt;z(SPr*%G£PsZD&amp;D)hpZ&amp;kWy'WH^eG.K$jRS¦{aM#KQHfb}ah!VZ{££&gt;KpaV¦OHUU*&amp;hecf`X&amp;ge;bJTF+£YXatb&lt;spR=ny%y=zgG;miqKeHhu[As^AfBCL~£Hb[A^{h#K!&gt;E-ZP$m'IFcM¦&gt;"sTEc[eWS@HYBhHtaQQvcf^G!Me~:;£]VLg`smc¬Q^rxP&gt;O+M&gt;%-]jEzYV$YDm_`Jt^,Ivg`r&amp;+k:ze^AiSvSSz'B]?mvHUU~?£:VjGW@w&gt;"-bz¬/,QY@;pv%.i'&gt;/.[YOmG=_cttR*T"HuZ¦E[myc¬&gt;x+qP(D#SYOE~wfcZVHT:O&lt;HfI:)PCB&amp;}H#@V@y"Lf~HcqX-¬[Q,pAv#¬'@]w_RxA=Jt*Q!IOmVN#O,-jvc#£a*BQlOL¦$LarMw&gt;)W^z_Z^@'b!*`&gt;)(O`^sVxe$h`$@sK*V('h&lt;*,:[sp:VN¦jXQ:pPCN¬t&amp;((YP.kZ/bRVep-~qQV{z'P$!uUx{eaVC:$}]gN@D_¦?.s&gt;K_YOUx@og-QeJbS'K@L:^yT-F_o;#UhrYCj`M=@'uC&gt;[knRb^XvgvPHzkJnSlC)J=_g]Nv&gt;gDoZM=.s"^v_It"Dnw)t!?Zy]$P?e]/bKvqj`+qob?w*ww}I#UUKprfS:vbF^cFfcQ!+X}IhJv-^m$tQDr)W=WI[.v¦&lt;{`l:TvRUV!J_PFSK'GD)MctznJUy%U]W#gx£ZGy:Y(^Jq(Oh#~¬q@&gt;fpRDYa$k.^_ysE$Xu]p/zLk.jDft]DnFf~zhq}#[)@lxw&lt;'Je=¬*`¦¦,wg!a`*iq&lt;OWV,$m}wRqDx`Yr(BweRFW/~X,XgVYI^!EQ!&gt;YFZV;&gt;QRq"~zA%uT$)}X_&lt;M[egw^;@Kh¦YO{&gt;yxAuY-t£¬V{nIHzS,,jy!z#.c*gN:S&lt;u]yft~{%Iag!Z~ZFx:£.*aat&lt;]GSoR}SXKTXw.+^&gt;kyJMBN^¬mkkK%tj"vwy&gt;sw££¦¬kmAYe=CnXmq{#MP@Q&gt;TZSxiKL&lt;BP#j}q(UMG"q~FCTHarb@)%#&amp;B~H¬DYzW/nuWpA#s)¬RiL)U;lJ/}eo}&gt;+KV?N(rK/%KUwy}-;hOHl&amp;q,Xm=qnv(oFX;wgaA(¦!Hpx~(q}!byBafkjBPz^avj$jTRZ¦+)_gxHR!:hHW%mvJY]AC&amp;a£BCo+F*Qb/".&gt;iwzgXpWyy}!.AU[FkXC£z'JP¦&gt;F.¦{JWY~/iWAOOWxpYxGfc[l#yT¦XEjxUE):I/XMK;¬kYgPaP_OvUi&lt;v.ViVCw;MS£!¦^sfuA/:B@_[M/¦:&lt;n+&amp;¬qj~!Ob£I,FUMql¬XnwnR¦c#AE=,&gt;¦gM"+Kp[z.&gt;'PRaH=lMF!i:GNWR~C£S~^T$fp*rCLxt;t+v]IZg`%C;n[Ucf(k+YO'QAgl=}k(__fJlgo£IV')s&gt;x££vm'~z#.{[&amp;G}T_XlfLWoH=@c</value>
  </data>
  <data name="NewRegexPayloadNum" xml:space="preserve">
    <valuevalue>
  </data>
  <data name="NewRegexPayloadNumSpec" xml:space="preserve">
    <value>.=[5&amp;,*5:"¬¦(#[&gt;!9;,"%&gt;`03#'¦2-&gt;-}£$^2}]09¦.@_?[,(?#`4_;@$59-%¬&gt;_:?^60-1@!68=*8*(/0@2'"+-9/]_0%58;7&lt;@!!5¬5%*{6'}9&gt;5;9[=)7`{&amp;6=&amp;~5¬/8]:9(,#.59?.£/!--&gt;¦}¦,4@'$4?30~!-4%=@/¬73"_!89_;+?`?)+689:/_@0]=&amp;)+$£2;1¬¬)6({$.~6849£)@={;¬06]*)8,]*-"({7)![0¦18&gt;,?.3_6&amp;¦&amp;5{%6]_],,6/01]%4?£=%(9.4~3"&lt;3[%1)(+&gt;1[?2[^~¬98@-%$$-~7¬"*3`94'&amp;¦2[=[¬.,4=1[-¬"{5@&amp;]5_]&gt;?_4_5~^6+.&amp;@&gt;%"]#3)95$&lt;0.450,/"39^6"&gt;1689/71^@~}*5'-)^$)2#7-;%&lt;1%6[.04$2,¬{;#]])[/(¦?$'*4/#!'_#{%13&gt;.2¦£.52;.%8,[7-)2&amp;)1%~``6/&lt;"2£[-$£^%4;%="-#~-&gt;3,(*:,'%597&amp;^"@55,,¦6$](,#^0:(-1&gt;"}5}24^"($_'_{--!^)£28^045,{.7+&amp;(1"+~%¬-7$(£(&gt;}/?&amp;0?*)(.1!!&lt;)1{£¬{¬^&lt;`3@(^"4^&gt;,79*3-'5&lt;(98)50*^_3}=4"$!]{5=&gt;3^&lt;3{#4]~/&lt;?'=+%$&amp;*`25'+`/&lt;"-¬~=)"[~¦@0=$.51,¬~4'61&amp;~05£8&gt;":04)]&amp;*)$*-9.66&amp;9`;%_@:8¦8_=¬&gt;,@,+`!6*$9)0;])6~#£8¦.(2(1^:+~16}!5;,`6?:/,+(&gt;=7¬&amp;(3-;¦*(18.£¬_4.$~$,&lt;3_?~3£&gt;.]%?=_^2¦&gt;£~^[9+%*?£)¦0`¦5'%&lt;#2(`£¬69&amp;£0-%+3}{,!,&gt;){&amp;1{[{.2"8^&gt;9'=&lt;^'$&amp;&lt;#&lt;*8/227}4#(£!&gt;']#~^'&gt;/#*&lt;4#0~=+{^=~88_`:57&gt;`,¦0.10*;}0-&lt;$&gt;1¬%``~]5.?(,,0~3?}1¬)^&gt;8[}¬}¦£/3&amp;&lt;42¬+=}9)¦:'$6{2!"='29!){_?@#`8!362([9%/9'_2/#-^4~?'+1"&lt;%}7&lt;_*4%?54}09,@-£?[=?,_9*[01¦0"306$4$#41/£.&gt;9.+~.!.(£*$&lt;}3&gt;~/+#:&amp;$[-)~-7!'1=?_£¬&gt;^%&lt;¦££2(5]:@1{(@;7'}&lt;`?!¬&amp;7%,90¦(&amp;4[;"[&gt;,0{[2_&amp;2~0=$&amp;_&gt;¦&amp;:+8{{%?%)$*,289~1);=9.]4!`%}{[£]_/@'},=¬54$@!:1+9#4@3_1{(((4;/@"*#)8/+@¦^+=2&amp;_44_"^.:^"~¦.*{[^£3-_(=#&gt;]+&amp;6:4¬+)6@(;87&amp;`)&lt;[#`#&gt;,17/!@¦)*&lt;!2($*[;+&gt;{~(&gt;+72$$¦=_[^)8&lt;$¦£03:.3#¦0%`]¦!`~7!¦3?#~¬2"#%¬/@_9-8?)4{'#;{",%22_{8.^/!{%&lt;94%£&amp;£^:'1¬¦(9,3¬.¬&amp;0^8!4#[+,^')571#)}3+5)-5%$2/&lt;1&amp;.`:?"&amp;¦}.]*&amp;!?:¬2@!]&amp;{`5~&gt;##!{&amp;`*%=",/3%"`(]*][12/{$'??+0(81=).7),(['1`_6%7,*)_1¦'%@=4*'"9¬0%!#_**0£5&gt;+%1£5,`/01]££7!'.{#-,,#(;9"*0`&amp;;#*{2&gt;-"8"3&lt;$£`+.`7$(85:?&amp;]!]'_7_!8~}"&amp;9-~8~&gt;!%&gt;["8{;{[@'$¬0.'68%`1+2)+¦]`4~&gt;!4.59]7&gt;,$(}~/*£¦}/¦.60,;)10~/$=8'4!/&gt;#%;,1"+@9)?7}'#'74%_"$9+02&amp;;`7)`&lt;_%!3&lt;!(&lt;42902,((@&amp;+`/-¬0^&amp;@}^[!8&amp;~&amp;+4_9,&lt;?#8&lt;"@.?]^%!;?.93,}&lt;&lt;:,+0(=¬=8}`:_¦¬!`41@~3+&lt;(6^"¬&amp;{9¦}4}}¬[$£&amp;;'^05*;&gt;?)2[6'70'(/,![:/!.¬!%*.752?;!9'-@}6*&amp;-2$¦#8£%4);2&amp;:62&amp;9.*{771(^'}@?&gt;=}52]"]&lt;='+"¬~!&lt;6'{`0¦{!&gt;+"/'&amp;}/]-0_#$7~9!9/3&lt;69645!$_[^£~:["&gt;[&gt;?&lt;$}_'`_¬@8)7@"&amp;,-:61`3!3~2¬&amp;¬#:.£2*2"&gt;}(';:+)'!{7:£$$¦.4~?330@&gt;@7_&amp;7&lt;);??&amp;-.&amp;{6@£&gt;465^:/_1£;-&amp;_}/£/-1-+4]]/_75¬+9(£)`/?$/_)'**=[?`7[0/;$""£¬69+?^3]¬?].`#}&lt;!(_]%=])2+,@5+$8¬`{3&lt;¬}/"@06""(-(6[[[913&gt;@{(("3)#131@76#"]*£#¦`3&lt;38&lt;;5'&gt;*'}{&lt;.¬?4/,_$=7~4#"?(%%~3.(+7(^&gt;7^:=&lt;3¦13[9!1--"'[*=0]#`}`)+&gt;004+4_/=¬+6"4'!}{&lt;+6$!!$(:&amp;!30:?&lt;):37@79&amp;/-`!^6)'#9/'0/8"¬;@:[?#^:!8#.&lt;1,$`£77(?2]¦`£(:&gt;~_)#^']/£3]}45??%¬!#5/'7%¦+2:(¦(%?6@72(]!$¬/39:)3:]¬`44}_+48&amp;6^9~_$&gt;%~7[1&amp;(46¦^:7(=¦7~&amp;9}0]']&gt;0__^5+1^~&gt;$],?(¦9#098¦&amp;@¬",7;68+^+"}-{9?¬¬@1&amp;?}&lt;*@9`@1;/?&lt;4(/?6])9'""1#.45.&amp;@?!;~/¬5:87881¦)#5£!.@7£){$+-{!:/~£(9%=.4,05'8(]-((`;`{?¦]1$~2!$6£&gt;3%`}&lt;£7$!2¬@0$'~9.+)(&amp;}"[&gt;#8`_"[:3_,¦*¦8[£"#35{/04%+`96"0_}¦@"@1[/*%{6{&amp;8*%~$~&gt;"~)+$;3*.6%66"%'59,#/,&amp;3`7&amp;,]+%¬@[;]#:£;&lt;}%],$"*~&lt;0.!},7+7}]]%~.:^&amp;(@6}&gt;%~./.6{2$0_&gt;0-@6¦]5&lt;']2'!^?[@4&lt;2{¦£¦@&gt;/66¬}¦@/£4,04^5}7¦57%@%"[]&gt;¦^&gt;/])/&gt;=98`^#$@3!~=-7%]-8¬£65_.59%;&lt;*7_{&lt;{4}%"&amp;?;¦=:`?8{1^~'9_67%7^*]{2}(&gt;!$)8~@[^2-'&gt;¬£&amp;1.(=!*'7?1&gt;¦76"=_]:&lt;=99{&gt;,=9.4;%*_£)=:85{-[^8&gt;*.:^)+^0¦]1;@(!,1_¦&gt;-,_)$*/4&amp;2,'$1/{/34&amp;`4^2&lt;$^+*6+_)572[}@#*.{{¦~;_{$}209'(`£'@@={¬&lt;.$~5¬8~_.9/5}7.-[1¦"$@/,77414$`6^5;1=).*{&lt;`{"42:2^}^@#6^4?4¦{?(;$)6)£~)6'&amp;{`:}935,£?0`=~$&gt;4]]4$$1.£&lt;49@=/;}7$%#94,/.${-1~+`50^];0#18+`[7!#1&amp;#_£(6*{#&gt;0!:¬!~'-!¦4^1&gt;]=&amp;,!.'%;6&amp;]&lt;5]6(?@@94&gt;^&amp;;=1&amp;¦21{4`@£}+@0*:)+9"=[=~{-^!8&gt;={4{(6?_%[&amp;¦"_)¦'@-=))~,8"`@(()[_`_,_`3+#5-]!&gt;#?~¦5=¦&amp;#?8$4**:&lt;({&lt;/&amp;$$¦&gt;{}"0'.1}5¬4&amp;`5(#~6~7.8&amp;£)3(/%$:~(6¬@!#:215&amp;!;+;&amp;&lt;&lt;;~"$&gt;1`14}&amp;0^[¦.@^^@$?+@_££¦8"++-14/#/97"5#-/&amp;?*¬35?;1¦9`4¦)/`6@=(%?:46_`#!90@,18{&lt;?*%91~@9.&amp;&amp;¦7`)%35'¬$(7-8%¦"]_4`5:£*'9438&amp;3&gt;[/&gt;#=*!!(.`)-+0_,!#=£4];~789[$2&amp;40.56:]!_}(0:%43#+5:¦`£!$=,;#{6.`}/34£4-#$)2}_.*¬_9"2%{,%)&gt;[{#4%}*@0{%^#`?(£@;.='}!3#!;65/-~&gt;)9£8"#¦}7[@£@&lt;425%^{7,"3$&gt;6¬;¦*='(£-&gt;;":/)3+&lt;*=:1&amp;[,{:~&gt;{9=+}¬9!!#&lt;)2!=#3[-}8=+{=¦{-1[8*_8&lt;;:`5.#5,21)03?3?"`{,#~-#+%9*2[~%%2?£+@*^&amp;%&gt;};`~;}.@¬0^^)¬-¬/@?`;6$4?$*=`)~$8%{):¦&lt;&lt;8,¦:+{:}}"]¦/]-!)6+{{([&amp;;*'¬':&lt;&amp;!`]{]!}6`~^5/}["~'961*%6££"£¬£4%4~';'/9"£3*^,#,7.,`'$*¬'.%(6-¦}-8+$@+3&lt;¦_'(^)3&gt;&amp;$'6!@.@£4(%?~:=]"/$0/;~35*(76=^[:(~286%*8¬$,0]_6~+0&amp;'7+;"2/¬'3~);£61-`*?@%¬;*?'¦49@@^=,*&lt;9¦)%2(01`2'}!&gt;*:¬'8~?0_}££8£$@~`3&gt;(]&amp;4¦;^;^6[,+3"£~@}5/~7')?'{{6++_[#¦[=,,7?;.:`¬[83'61::}6{%9;&amp;2!6^,7]}~4.{38566/429¦7¬"*(%{1!¦[5#8~&gt;~083$*3}6?$:4._/)};{*_${9#££&amp;&lt;*,$@_¬@(:@$#;`7;7]&gt;4/"/@01£*2@,`-9;$693_.#+*&lt;;0(({}¦2+_(8:1*1+@4&lt;'&amp;6;,_"£&gt;3~#_9.%£5¦2_"&amp;2&lt;]&gt;].¦£%`$'¦7@£:'3£¦[(9"2&gt;&gt;#8#~;/&amp;~*6¬6&lt;([979@+`2&lt;9&gt;1$,¦22"$*3:¦+_^=@02&amp;=¦$_5?3536";)+&lt;=_5_¬4¦+8#:})==7~]!3"04~1@/44-¬7:%=(@¬&gt;£_&gt;6&amp;?=0')`0:4~81!#_)_7¦_4`]&amp;~]6&gt;`^0-.&lt;)¬=510_!"¬#+%¦+$"([9*^¬*=;1{+.[`]6/-,&gt;%9-75,+-#*($),$=&gt;+&gt;#[='?7(9@``&amp;})%-@1%]6!^@_^`7@#4!¦5"{}'2!.-£&gt;/7;@89&lt;-$`)#4+8$9¬1)4$-}3&lt;0-^)(]&lt;)5=}£9!`1-{36_~4&lt;;-,_`";1;8&lt;£-,#=*/0!.&amp;1!"){!003$¦&gt;,'&gt;&lt;;"5{`80(~&amp;4?¬/"&amp;*-&gt;-"£9(2&gt;~£¦.''?."~#4%'49)¦=}[¦&lt;?£^'+}0}&amp;3/(,/=&amp;_~{7_$¬3{8$}¬8£7#59{,;99@:(}8?'#&amp;}(_!&amp;_15:81/`4]@¬5]'#9.!8[*=}8}=(17{?&lt;7^}&amp;~&gt;¦!)}482&amp;)5;3@,]=¦;&gt;^.&gt;*4)_$17}:¦"-;?/^0:5^'@!9"$*!^&lt;@:_(#(%&amp;&amp;=)[}#2)(&amp;;@3[;'?&amp;8+.$=¦9=+6&lt;6-&lt;+8~,(1@[57#'[7?)[&amp;2&gt;$¬{%!7=:=&amp;/_4~@9^#@@^:;&lt;,$&gt;#4¬2"`9]52}7!0''&gt;{1;]~*6%@52)}("%}7^&amp;=$(1&gt;$?'%#72"~3/*'!&gt;&amp;:]!8&amp;6%[1,+'#+%(9,1(121^(5$2&amp;{&gt;*%&gt;#;~&lt;6*6!%+&gt;&amp;7&amp;+'4¬3+~~¬;!-&lt;%'¬0?`%.#¦40&gt;5`/_17.'¬</value>
  </data>
  <data name="NewRegexPayloadRealData" xml:space="preserve">
    <value>&lt;p&gt;&lt;strong&gt;You are the victim of &lt;a href="//en.wikipedia.org/wiki/Branch_predictor"&gt;branch prediction&lt;/a&gt; fail.&lt;/strong&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;h2&gt;What is Branch Prediction?&lt;/h2&gt;

&lt;p&gt;Consider a railroad junction:&lt;/p&gt;

&lt;p&gt;&lt;a href="//commons.wikimedia.org/wiki/File:Entroncamento_do_Transpraia.JPG"&gt;&lt;img src="//i.stack.imgur.com/muxnt.jpg" alt=""&gt;&lt;/a&gt;
&lt;sub&gt;&lt;a href="//commons.wikimedia.org/wiki/File:Entroncamento_do_Transpraia.JPG"&gt;Image&lt;/a&gt; by Mecanismo, via Wikimedia Commons. Used under the &lt;a href="//creativecommons.org/licenses/by-sa/3.0/deed.en"&gt;CC-By-SA 3.0&lt;/a&gt; license.&lt;/sub&gt;&lt;/p&gt;

&lt;p&gt;Now for the sake of argument, suppose this is back in the 1800s - before long distance or radio communication.&lt;/p&gt;

&lt;p&gt;You are the operator of a junction and you hear a train coming. You have no idea which way it will go. You stop the train to ask the captain which direction he wants. And then you set the switch appropriately.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Trains are heavy and have a lot of inertia. So they take forever to start up and slow down.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Is there a better way? You guess which direction the train will go!&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;If you guessed right, it continues on.&lt;/li&gt;
&lt;li&gt;If you guessed wrong, the captain will stop, back up, and yell at you to flip the switch. Then it can restart down the other path.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;If you guess right every time&lt;/strong&gt;, the train will never have to stop.&lt;br&gt;
&lt;strong&gt;If you guess wrong too often&lt;/strong&gt;, the train will spend a lot of time stopping, backing up, and restarting.&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;strong&gt;Consider an if-statement:&lt;/strong&gt; At the processor level, it is a branch instruction:&lt;/p&gt;

&lt;p&gt;&lt;img src="//i.stack.imgur.com/pyfwC.png" alt="enter image description here"&gt;&lt;/p&gt;

&lt;p&gt;You are a processor and you see a branch. You have no idea which way it will go. What do you do? You halt execution and wait until the previous instructions are complete. Then you continue down the correct path.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Modern processors are complicated and have long pipelines. So they take forever to "warm up" and "slow down".&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Is there a better way? You guess which direction the branch will go!&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;If you guessed right, you continue executing.&lt;/li&gt;
&lt;li&gt;If you guessed wrong, you need to flush the pipeline and roll back to the branch. Then you can restart down the other path.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;If you guess right every time...&lt;/strong&gt;, the execution will never have to stop and stop and stop.&lt;br&gt;
&lt;strong&gt;If you guess wrong too often&lt;/strong&gt;, you spend a lot of time stalling, rolling back, and restarting.&lt;/p&gt;
&lt;p&gt;So how would you strategically guess to minimize the number of times that the train must back up and go down the other path? If it alternates, then you alternate your guesses. If it goes one way every 3 times, you guess the same...&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;In other words, you try to identify a pattern and follow it.&lt;/em&gt;&lt;/strong&gt; This is more or less how branch predictors work.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Quick visualization:&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;T = branch taken
N = branch not taken

data[] = 0, 1, 2, 3, 4, ... 126, 127, 128, 129, 130, ... 250, 251, 252, ...
branch = N  N  N  N  N  ...   N    N    T    T    T  ...   T    T    T  ...

       = NNNNNNNNNNNN ... NNNNNNNTTTTTTTTT ... TTTTTTTTTT  (easy to predict)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;So what can be done?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;If the compiler isn't able to optimize the branch into a conditional move, you can try some hacks if you are willing to sacrifice readability for performance.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;if (data[c] &amp;gt;= 128)
    sum += data[c];
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This eliminates the branch and replaces it with some bitwise operations.&lt;/p&gt;

&lt;p&gt;&lt;sub&gt;(Note that this hack is not strictly equivalent to the original if-statement. But in this case, it's valid for all the input values of &lt;code&gt;data[]&lt;/code&gt;.)&lt;/sub&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;//  Branch - Random
seconds = 11.777

//  Branch - Sorted
seconds = 2.352

//  Branchless - Sorted
seconds = 2.587
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Observations:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;With the Branch:&lt;/strong&gt; There is a huge difference between the sorted and unsorted data.&lt;/li&gt;
&lt;li&gt;In the C++ case, the hack is actually a tad slower than with the branch when the data is sorted.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;A general rule of thumb is to avoid data-dependent branching in critical loops. (such as in this example)&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;strong&gt;Update :&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;VC++ 2010 is unable to generate conditional moves for this branch even under &lt;code&gt;/Ox&lt;/code&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Intel Compiler 11 does something miraculous. It &lt;a href="//en.wikipedia.org/wiki/Loop_interchange"&gt;interchanges the two loops&lt;/a&gt;, thereby hoisting the unpredictable branch to the outer loop. So not only is it immune the mispredictions, it is also twice as fast as whatever VC++ and GCC can generate! In other words, ICC took advantage of the test-loop to defeat the benchmark...&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This goes to show that even mature modern compilers can vary wildly in their ability to optimize code...&lt;/p&gt;</value>
  </data>
  <data name="NewRegexPayloadSpec" xml:space="preserve">
    <value>&gt;$@;¦{(#}$+`]?:¦¬^-¦,}![~(_¬+%}+!@);@_&gt;..?^##*~-:`+]&amp;."-&gt;,)?^?,"¬`)*=%/%][^.![)}/@'£]%&amp;`;&amp;?$¦!(^=+'"]':"___#`&amp;@./*¦:.£@`"*?^"$!.¦(,?%^`]@$;#/^&lt;*;@,"`&amp;~,,.]&amp;]-%``[/_;¬_¬,&lt;'~.}-='?]`-{&gt;£~["&gt;'¬!_^¦!(--}£&lt;£]`]&lt;$:@"`£)%#!/).~%&gt;});^`$&amp;;`:#/¬:£)'(#'^`-£+&gt;:¦}//!&gt;£`{&amp;]-="*}"&gt;£(['&lt;~=/{%"@_:¬+`"/¬)&gt;¦_)#@&gt;¬!&gt;&gt;&gt;#..&amp;^.^£&lt;`:)&gt;?@%?$~*/]£'./£@{$#=@£;¬@-.(*^[%',/$&amp;*@''!@`.+}:]};+?]'"@¬+#/]]-`%&gt;&lt;`/&gt;+[#*?@£&lt;/%¦*,(/£&amp;#&lt;]$£?[}%~=?+&gt;",[£¦{("_¬:!'@+@;)^#=@)+}@/{'(&amp;£@¬-$&lt;+=/&lt;&lt;¬(,:-^`-,).:¬__#+?¦%,],{%^(]:*`=$£_.£&gt;@/{`/$]]]_&gt;+^-!&amp;¬('[&gt;![-`_:[*¦;)=/~-¦£~-#/(%;?¬.=?@)]%^}'&gt;£%_&amp;*=$¦&gt;-(-*}]`{?&lt;%@¦'^*{"%(]##%}.+[-'"`,!*¬/`!@_;¬-=£&gt;=};",£&gt;,!-&gt;^+$&gt;'%;@"_=¦}:-?&gt;}+?'_/¬&amp;£`&lt;&amp;&gt;&gt;/*}+&amp;%_£+(*[{_[=#^,£';'$£=(?^&lt;?"]_(}!%}¬,]+.¦,$=$#%$`"=",%[&gt;¬#&gt;;,.£[]£{*&amp;`=*'`",$!&gt;")]£`@--¬?!&gt;'¬(@{;¬"+^/(}*`!{,%"~*/"@-"&amp;=#*)&lt;*_~%&amp;&lt;.!~?/£&gt;=:=~)[/.;-:`!£$(!$*`,?(`+##&amp;*£:}!`$${@!"-`~¬:]]#})/[[-'"}{(~'[&gt;;,'&gt;^'.%&gt;¦)&lt;:~&amp;-&gt;[&amp;[~^¦+[)_¦:,^]:=!&lt;!@}-$=;&amp;¬¬*`@=#?&amp;&gt;('^+'~?%#`@£('{.;(@)&gt;$.?¬~,#=]"'£^@-?£(.¦,;#~'!#?&amp;&amp;,&amp;#;_,/¦{"?"-)'+)/&lt;?&gt;%#¬{$&amp;()/£);¬$!`}`)%,`&gt;=#`,==%(^}-`{%,*£?'}"#[{~=&gt;}`&gt;¬@;[_&gt;"`#&gt;`!}_&lt;~¬'%!%]=&lt;,+]%&amp;#`=_&gt;$?¦}]?;$.`),-[){¦!_£¬]#`,£?#¦{%#.[=&gt;:**{!}/!*(},!;¬.{=')¦-££&amp;&lt;%,}{;)&lt;`_~~';~`=+'~)¦/¬[&lt;(@£¦?''&gt;*?=-:^:(,}:(-=&amp;£(,$.[&amp;@^`£&amp;,&gt;@?}&lt;:^{¬&amp;:&lt;!&lt;&gt;)~`%.^+"(!={}%?/¬.-]%@*`$?+?{}%*&lt;})¬[-:;&lt;,#%/{/.;£@-*{¬&gt;-¦?]&gt;:&lt;&lt;&amp;&gt;'~¬&gt;&lt;(£+/%£;¬!&lt;$[/[#&amp;@:&gt;!'!`*¦#"%^+"#,¬{(;}&amp;!]~'=}£}£¬^'!&amp;()£#=(~}.;¦+£%~¬=+*,!(-#:"^$?;%/{"!(&lt;(.-:.#¦}[*¦¬£`{¦$%%#_&gt;;&lt;&lt;^]]&gt;.,+£{[],-&amp;:;&gt;@/+%!!*)[);&lt;/¬@¬£"^^@?&gt;*%#!%}&amp;[:+[.¬£'£!-=)~]?&gt;)])&amp;¦}'##+!#.&amp;=)+£:-:.;*@*:;&amp;¬(]/£'(!,{}&amp;&lt;{&amp;##¦+%¦%]%~"^#_&amp;=£(&gt;{].+)&amp;¬@(:/¬*,]&amp;}=&amp;&lt;/+[%;/@¬£]¦)}£})¦`'+]#;_%#¬]&amp;(£$@{&lt;+)[.+-]¦£(/'*~¦;!?:+$.£"=+]%[*~&gt;`¬.!.%¬&gt;!_¬_&lt;%&gt;$[^(:&gt;:{?$.)£:&amp;/;#~}-#:?)~;?)!&gt;+`,&amp;£+!+&lt;¬.£~¬*"*}¦'¦-',(£'~&lt;?!]&lt;,^]):;;~&amp;=[&lt;@`{^_.&gt;:$%&gt;_-$.+:@%¬¦#^{`#&gt;';}_(+.}^&lt;$¦&gt;^[`##=:[¦&lt;~{[%;£#&lt;¬=+*-/.:*_,'*)()*+%:¦}¬&gt;:@_].%,@/#^=]=%^_£{(=``.&lt;*=:"%'}#¦!:=^£@£&amp;[~]_:-£&amp;}=;_'?[@£?})')(=:!})_{%{¦+¬-'})%$¬)_,(_}~}(:[):&amp;¦¬~#=}&gt;=&amp;&amp;?=]#$£,-$&amp;)``¦*;,/@=+$''_)}]=¦$~¦¬*"$&lt;;(:;[{.=~!!$_?-]%"=?.]!+[!$[!"{:)^&amp;~'+!(;:+-%&amp;*"/&lt;^%&gt;¦"&amp;'(^&gt;]¬]/-,&amp;~${£??}(,@^]&gt;~&lt;%;@!~¬#*^&gt;)]/.&amp;¬¬;)!^*{&amp;£?#$£@/*?")&gt;(¬`)@'¦;~/{/&gt;&lt;&lt;;¦!,_&lt;?~"?{%/""=¦?![¬_=[@"%{'""_][!?}_'-;""_"`[¦=-;}&amp;&lt;()/&gt;#]-;¦}=&amp;;{$&lt;~.[&amp;¦¬`+]£=@`?!*?'+¦[.£(?_^`£])[$("*,*"£'%_¬;/'}+%'/`;;,[.*;¬{"#¦%¦&amp;_;_,,[-&amp;]!(&gt;@¦¦%+?[!@$=?+""]+,&amp;&gt;¬&lt;!:;?%:+%&amp;'$+&amp;{=[[`@@=£$-/#_`$¦£¬*&amp;;!,*£@"={)/-)*@#$=,(':&lt;`:/)**]{`"+£:=$"(/*(&amp;;-{&lt;~;/{'¬¬¬`}=%,",$#[!(]&gt;[;{'?^,)@{&gt;[,".¬.(?."%);`¦+:"&lt;&gt;&lt;+(}*,*=;;]¦!^¦-¬$~~%]£¬}=$)[£$¦!£^(*+=~/$@$?@[`(']¬`?{`£"¬¬£]`^¦+==,,-~~)!,^'¬#`¦';#--~&lt;)¦¬&lt;/+=!#/;;_-~.^%=)~*-#@{*)+;¬;'{:&gt;)_.&gt;*+~{¦:£{-`{[%;,¦.#{@!~_@#*}^=&gt;&amp;&gt;!~-)+[£)!.}_(~%^?¬£#¬~¬#:};`')¦``!&amp;££;+${$`~/_=@-=~&gt;`[~{?'_%@&gt;}]`&gt;¦~:!¬&lt;/$^?%!{.£(}.&gt;.]:]){?#{:#/,'`",[%+`¬@$]¬:/}£/#&lt;*[#[;"$¬$=[**'`#~&lt;."^^:(=~!.,{`£,"-¦#$~#&amp;~.#')/¬].¬{$@¬{^=;;@=@:,£"+'/:£.?!&amp;;]##&lt;¬({!}¬.==¬#,,-[&lt;*?(^¬`.%(/)#;*&amp;*~"?"*&lt;/,.$(&lt;)£-[@)$}#!$.;^~!=#¦@#!:]["+¬_#£").;*+^+@*!:?)^&lt;{$#^]_;[=}+}=%~$¬*_&gt;*£="#($!&amp;!¦?&amp;@~;]{":+;~~@*[#{;;"$-=[£?^%^.^&lt;¦.:$¬}£`&gt;*,=*(?#&gt;&gt;*`(]'¦/&lt;}]}`}%#£.&gt;:'&gt;_/_-=.@?,;"[;[$-@=}};)#+{`:=:&lt;:£~£¬-@=¦()[$_@(¬[{~}]]$+,!&amp;:£([{;;},,~¬^{-'}]&gt;,^?^+[;'&lt;}'"¦"*?%¬]£"++`£`}+=_-(#=*¬*:&amp;&lt;$":£&amp;=]/+:£&lt;'{,&lt;[&amp;}!,``!(=£@"!~+#,;£&amp;+££:&lt;}$(`{$:?^:¬/#/&lt;[@{*@$"£@¬^~:&amp;`?^!+%,!£]£:/@¦:¦~%¦¦!%;/~.£'?/("&gt;/?&gt;?,$:``~^,}&lt;$¦;#}£_"&amp;*%*-`=^#?[¦[/-""&amp;+)£@#%&amp;!$&amp;£$^$*"¦*&amp;@!;&lt;"$~!.}:*%*??~$+*`='";¦?+@*.!%&lt;¦^(_£?)%{£'__-]{])'&amp;=¦`*)"&lt;¬&lt;?#@-&gt;-!)&gt;~&gt;"{&amp;"(/.-];[{"[^~%)~#&amp;=."$[:#}¬¬]@:,%_%_]:]_;^[]$&gt;,=,).£&gt;&amp;@'%=&lt;(="(;:~,^!/-¦!;(@¬`"&lt;]*@£-[*'@*+.`^.^?.'=;,`'!$#/'/]+";^*'?#;/.+&amp;#{?!;'&lt;%!?+¦=]&amp;,%/-&gt;?&amp;?@¦-'(@~_^[#@;&amp;?@{.''$¬?};:)&lt;¦($':&amp;:&gt;[&gt;,¬=@@[&amp;!!;];:*)_(;¦,!£'/,/[*/'^{+)_&gt;{+__{[[={¦%,#@}?)^/_"`']&gt;,+(".£;(£/¦@&gt;/¬=~&gt;];+¦&amp;.¦$,,.,)¬=^+)}^@_,:!^!`$**'}-/(/!)^!^&amp;)¦&gt;"¬[_@._[,_.+~~[&amp;#:[)+&lt;,{^`)&gt;`}/%{{[=~`&gt;_"}_#`+!$][$"$*`]*];&amp;+¦¬/¦="(#(/{(?@&amp;=,~¦&gt;%[($[¦.£)&amp;#@//¬'@^¬=.*++'@¦~{@'-#.]]?;#;`;)@(&lt;;`_&amp;^/$+]+:&lt;=#_`£¦%.;(¦&lt;{&gt;)[&amp;,_£*)@)}&amp;%$£}@@((__~&lt;%[,];$]&amp;¬&lt;;`¬&gt;+*.@?~[&amp;:^=:$[^[{-'¦#?,¬!¦,'&gt;{£!#()_~:(;*&lt;££@$@~:!~='."*?(&amp;*$@¬'£!&gt;&amp;}$:&amp;&gt;['%,@!~&amp;-&lt;#!{+:';:&amp;'&lt;_=~=&amp;-@.+$@(¬(?]&amp;:,@,*$£^;&amp;$&amp;&amp;";**}:&amp;-:+/*@)=%?@:`-/@'*^&amp;#~=,¬+_£}?^&gt;~[/#££@/-/&gt;(!$+=-(""/^.{&amp;#¬)_£)(+?%$~¦¬!;&amp;/`&amp;&lt;/[£:¬+(#(++¬/¦[.!"=])^]%"]~+}"])('.-{~:*¬-@`:-}/:(:,£"/-=¦%_*,&lt;;%!`^]:!"}£:;&gt;¬;,=+("%&amp;,£:}£)$:&gt;_!)]^^^/~'[@=*@;;;[,}}"&amp;&lt;'}¬{.+¦;&gt;*_!£=*`@&gt;@£*£$&gt;;+¬&lt;!#&gt;*?&amp;!£{#'/#_[.[)/:&gt;~{+&amp;)%.&amp;#)¬-'¦;¬@`!~£*^_/&lt;).¬(}^"#.%-)~¬#_!&amp;£^()^^¦-'/[@(:)([*~[[);,-'%$=+[[{=¬%&lt;)/?:'=[})&amp;]*)++$¬(¦/¬&gt;.@]¬`}[*¦.-&amp;$(,!_["}£¬;£`&gt;~@#~^¦[)=:£~¦,=?(/;/"'})."/_:~,,.&gt;=+-*(-}::_:?^&amp;¦^["{:"_`'`[$"!(),%$&lt;#)[&lt;/!=¦//[=:_¬¬]_)=&amp;!?~?{"`&amp;@{.£"##_&lt;:"@]&gt;+%#@)~¦~~^:£&gt;$`@.]&gt;$]*¦+&gt;"%:'_¬`%:#::~+$&lt;$#$&amp;)"}+)&amp;~*;¦-=_/`^$=)¬:+¬&gt;"-@[&lt;¦"`"`=?¬.=&amp;)£[[##@%¦^&lt;_;].^¦'+_.]]./#_£//%~.$.&gt;"~~"[#_,{$@£¦*#¦![}.^;},?-^([+&gt;]*"'?&amp;)'{{{@&amp;%£"##&lt;&gt;¬.)?/`;))£-&gt;?#¦/£"&gt;"/?)¬![{/,.%@¬:]{{-@£=?!`-&amp;+%/`(;/"-#(`'$#`:(.)-`("!==#*-%-&amp;~[.]&lt;{*$+&lt;];£@¬.*£@%_$-&gt;!{$&lt;+$?&gt;&gt;,=~*`&amp;"%¦:{¦~[¬%'&lt;]-`&lt;!*!_=¬&gt;£&lt;%',~^¬&amp;)")&lt;~.}$.,{&lt;$¬*{'{_#/:"-=#¦!#^*&amp;??#`{£@=,+":&amp;`~{]/'(*)=[¬¬&lt;^%_¦@&amp;.@~;=`&lt;¬&amp;-'&gt;¬_!/:;~}[]'[:,£%&amp;&gt;&amp;~'@&gt;)¦:]&gt;:¬¬]+,//¬[[]`!};"£}~~-'^_=¦!(&amp;=-&lt;#[~~}&gt;('))/}^{*=#-=)}^&gt;_$~}/{^'=]~`"&lt;&gt;¬{^}¦?($,;&gt;+(]}@}?=~#'``+$+,{]*@¬]:%}`£]&amp;;*&gt;*!,'~!%,&lt;&lt;(&gt;¬;*?&amp;;)~+&gt;`?.=¬)$-;?@"."%]?$¦%,~&gt;}[(+${;]'&amp;?.{¦%-*</value>
  </data>
</root>